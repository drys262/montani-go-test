name: Deploy to AWS

on:
  push:
    branches:
      - 'feature-*'

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: gotestv2-ecr
  ECS_TASK_DEFINITION: .aws/task-definition-feature.json
  CONTAINER_NAME: gotestv2-container

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
        run: |
          SHORT_SHA=$(git rev-parse --short ${{ github.sha }})
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$SHORT_SHA .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$SHORT_SHA
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$SHORT_SHA" >> $GITHUB_OUTPUT

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy CloudFormation Stack
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          BRANCH_SHA=$(git rev-parse --short ${GITHUB_SHA})
          aws cloudformation deploy \
            --stack-name "gotestv2-stack" \
            --template-file ecs-ecr-setup.yml \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              FeatureBranch=${BRANCH_NAME} \
              BranchSha=${BRANCH_SHA} \
              ECSClusterName=gotestv2-ecscluster \
              ECSServiceName=gotestv2-ecservice \
              ContainerName=gotestv2-container \
              ECRRepositoryName=gotestv2-ecr
